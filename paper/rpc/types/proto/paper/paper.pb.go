// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.4
// source: paper/rpc/paper.proto

package paper

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaperFormal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstructId string `protobuf:"bytes,2,opt,name=instructId,proto3" json:"instructId,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Comment    string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	CreateAt   string `protobuf:"bytes,5,opt,name=createAt,proto3" json:"createAt,omitempty"`
}

func (x *PaperFormal) Reset() {
	*x = PaperFormal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperFormal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperFormal) ProtoMessage() {}

func (x *PaperFormal) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperFormal.ProtoReflect.Descriptor instead.
func (*PaperFormal) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{0}
}

func (x *PaperFormal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaperFormal) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

func (x *PaperFormal) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PaperFormal) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PaperFormal) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type UploadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstructId string `protobuf:"bytes,1,opt,name=instructId,proto3" json:"instructId,omitempty"`
	Content    string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UploadFileReq) Reset() {
	*x = UploadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReq) ProtoMessage() {}

func (x *UploadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReq.ProtoReflect.Descriptor instead.
func (*UploadFileReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{1}
}

func (x *UploadFileReq) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

func (x *UploadFileReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UploadPaperFormalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *UploadPaperFormalResp) Reset() {
	*x = UploadPaperFormalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPaperFormalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPaperFormalResp) ProtoMessage() {}

func (x *UploadPaperFormalResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPaperFormalResp.ProtoReflect.Descriptor instead.
func (*UploadPaperFormalResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{2}
}

func (x *UploadPaperFormalResp) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type ListPaperFormalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstructId string `protobuf:"bytes,1,opt,name=instructId,proto3" json:"instructId,omitempty"`
}

func (x *ListPaperFormalReq) Reset() {
	*x = ListPaperFormalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPaperFormalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaperFormalReq) ProtoMessage() {}

func (x *ListPaperFormalReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaperFormalReq.ProtoReflect.Descriptor instead.
func (*ListPaperFormalReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{3}
}

func (x *ListPaperFormalReq) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

type ListPaperFormalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperFormals []*PaperFormal `protobuf:"bytes,1,rep,name=paperFormals,proto3" json:"paperFormals,omitempty"`
}

func (x *ListPaperFormalResp) Reset() {
	*x = ListPaperFormalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPaperFormalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaperFormalResp) ProtoMessage() {}

func (x *ListPaperFormalResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaperFormalResp.ProtoReflect.Descriptor instead.
func (*ListPaperFormalResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{4}
}

func (x *ListPaperFormalResp) GetPaperFormals() []*PaperFormal {
	if x != nil {
		return x.PaperFormals
	}
	return nil
}

type CommentPaperFormalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CommentPaperFormalReq) Reset() {
	*x = CommentPaperFormalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentPaperFormalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentPaperFormalReq) ProtoMessage() {}

func (x *CommentPaperFormalReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentPaperFormalReq.ProtoReflect.Descriptor instead.
func (*CommentPaperFormalReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{5}
}

func (x *CommentPaperFormalReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommentPaperFormalReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CommentPaperFormalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok int64 `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CommentPaperFormalResp) Reset() {
	*x = CommentPaperFormalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentPaperFormalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentPaperFormalResp) ProtoMessage() {}

func (x *CommentPaperFormalResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentPaperFormalResp.ProtoReflect.Descriptor instead.
func (*CommentPaperFormalResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{6}
}

func (x *CommentPaperFormalResp) GetOk() int64 {
	if x != nil {
		return x.Ok
	}
	return 0
}

type ProposalDraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstructId string `protobuf:"bytes,2,opt,name=instructId,proto3" json:"instructId,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Comment    string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	CreateAt   string `protobuf:"bytes,5,opt,name=createAt,proto3" json:"createAt,omitempty"`
}

func (x *ProposalDraft) Reset() {
	*x = ProposalDraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalDraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalDraft) ProtoMessage() {}

func (x *ProposalDraft) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalDraft.ProtoReflect.Descriptor instead.
func (*ProposalDraft) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{7}
}

func (x *ProposalDraft) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProposalDraft) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

func (x *ProposalDraft) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ProposalDraft) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ProposalDraft) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type UploadProposalDraftResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *UploadProposalDraftResp) Reset() {
	*x = UploadProposalDraftResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadProposalDraftResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadProposalDraftResp) ProtoMessage() {}

func (x *UploadProposalDraftResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadProposalDraftResp.ProtoReflect.Descriptor instead.
func (*UploadProposalDraftResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{8}
}

func (x *UploadProposalDraftResp) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type ListProposalDraftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstructId string `protobuf:"bytes,1,opt,name=instructId,proto3" json:"instructId,omitempty"`
}

func (x *ListProposalDraftReq) Reset() {
	*x = ListProposalDraftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProposalDraftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProposalDraftReq) ProtoMessage() {}

func (x *ListProposalDraftReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProposalDraftReq.ProtoReflect.Descriptor instead.
func (*ListProposalDraftReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{9}
}

func (x *ListProposalDraftReq) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

type ListProposalDraftResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalDrafts []*ProposalDraft `protobuf:"bytes,1,rep,name=proposalDrafts,proto3" json:"proposalDrafts,omitempty"`
}

func (x *ListProposalDraftResp) Reset() {
	*x = ListProposalDraftResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProposalDraftResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProposalDraftResp) ProtoMessage() {}

func (x *ListProposalDraftResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProposalDraftResp.ProtoReflect.Descriptor instead.
func (*ListProposalDraftResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{10}
}

func (x *ListProposalDraftResp) GetProposalDrafts() []*ProposalDraft {
	if x != nil {
		return x.ProposalDrafts
	}
	return nil
}

type CommentProposalDraftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CommentProposalDraftReq) Reset() {
	*x = CommentProposalDraftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentProposalDraftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentProposalDraftReq) ProtoMessage() {}

func (x *CommentProposalDraftReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentProposalDraftReq.ProtoReflect.Descriptor instead.
func (*CommentProposalDraftReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{11}
}

func (x *CommentProposalDraftReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommentProposalDraftReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CommentProposalDraftResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok int64 `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CommentProposalDraftResp) Reset() {
	*x = CommentProposalDraftResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentProposalDraftResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentProposalDraftResp) ProtoMessage() {}

func (x *CommentProposalDraftResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentProposalDraftResp.ProtoReflect.Descriptor instead.
func (*CommentProposalDraftResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{12}
}

func (x *CommentProposalDraftResp) GetOk() int64 {
	if x != nil {
		return x.Ok
	}
	return 0
}

type ProposalFormal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstructId string `protobuf:"bytes,2,opt,name=instructId,proto3" json:"instructId,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Comment    string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	CreateAt   string `protobuf:"bytes,5,opt,name=createAt,proto3" json:"createAt,omitempty"`
}

func (x *ProposalFormal) Reset() {
	*x = ProposalFormal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalFormal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalFormal) ProtoMessage() {}

func (x *ProposalFormal) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalFormal.ProtoReflect.Descriptor instead.
func (*ProposalFormal) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{13}
}

func (x *ProposalFormal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProposalFormal) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

func (x *ProposalFormal) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ProposalFormal) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ProposalFormal) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type UploadProposalFormalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *UploadProposalFormalResp) Reset() {
	*x = UploadProposalFormalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadProposalFormalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadProposalFormalResp) ProtoMessage() {}

func (x *UploadProposalFormalResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadProposalFormalResp.ProtoReflect.Descriptor instead.
func (*UploadProposalFormalResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{14}
}

func (x *UploadProposalFormalResp) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type ListProposalFormalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstructId string `protobuf:"bytes,1,opt,name=instructId,proto3" json:"instructId,omitempty"`
}

func (x *ListProposalFormalReq) Reset() {
	*x = ListProposalFormalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProposalFormalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProposalFormalReq) ProtoMessage() {}

func (x *ListProposalFormalReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProposalFormalReq.ProtoReflect.Descriptor instead.
func (*ListProposalFormalReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{15}
}

func (x *ListProposalFormalReq) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

type ListProposalFormalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalFormals []*ProposalFormal `protobuf:"bytes,1,rep,name=proposalFormals,proto3" json:"proposalFormals,omitempty"`
}

func (x *ListProposalFormalResp) Reset() {
	*x = ListProposalFormalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProposalFormalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProposalFormalResp) ProtoMessage() {}

func (x *ListProposalFormalResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProposalFormalResp.ProtoReflect.Descriptor instead.
func (*ListProposalFormalResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{16}
}

func (x *ListProposalFormalResp) GetProposalFormals() []*ProposalFormal {
	if x != nil {
		return x.ProposalFormals
	}
	return nil
}

type CommentProposalFormalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CommentProposalFormalReq) Reset() {
	*x = CommentProposalFormalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentProposalFormalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentProposalFormalReq) ProtoMessage() {}

func (x *CommentProposalFormalReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentProposalFormalReq.ProtoReflect.Descriptor instead.
func (*CommentProposalFormalReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{17}
}

func (x *CommentProposalFormalReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommentProposalFormalReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CommentProposalFormalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok int64 `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CommentProposalFormalResp) Reset() {
	*x = CommentProposalFormalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentProposalFormalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentProposalFormalResp) ProtoMessage() {}

func (x *CommentProposalFormalResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentProposalFormalResp.ProtoReflect.Descriptor instead.
func (*CommentProposalFormalResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{18}
}

func (x *CommentProposalFormalResp) GetOk() int64 {
	if x != nil {
		return x.Ok
	}
	return 0
}

type PaperDraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstructId string `protobuf:"bytes,2,opt,name=instructId,proto3" json:"instructId,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Comment    string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	CreateAt   string `protobuf:"bytes,5,opt,name=createAt,proto3" json:"createAt,omitempty"`
}

func (x *PaperDraft) Reset() {
	*x = PaperDraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperDraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperDraft) ProtoMessage() {}

func (x *PaperDraft) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperDraft.ProtoReflect.Descriptor instead.
func (*PaperDraft) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{19}
}

func (x *PaperDraft) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaperDraft) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

func (x *PaperDraft) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PaperDraft) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PaperDraft) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type UploadPaperDraftResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *UploadPaperDraftResp) Reset() {
	*x = UploadPaperDraftResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPaperDraftResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPaperDraftResp) ProtoMessage() {}

func (x *UploadPaperDraftResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPaperDraftResp.ProtoReflect.Descriptor instead.
func (*UploadPaperDraftResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{20}
}

func (x *UploadPaperDraftResp) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type ListPaperDraftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstructId string `protobuf:"bytes,1,opt,name=instructId,proto3" json:"instructId,omitempty"`
}

func (x *ListPaperDraftReq) Reset() {
	*x = ListPaperDraftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPaperDraftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaperDraftReq) ProtoMessage() {}

func (x *ListPaperDraftReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaperDraftReq.ProtoReflect.Descriptor instead.
func (*ListPaperDraftReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{21}
}

func (x *ListPaperDraftReq) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

type ListPaperDraftResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperDrafts []*PaperDraft `protobuf:"bytes,1,rep,name=paperDrafts,proto3" json:"paperDrafts,omitempty"`
}

func (x *ListPaperDraftResp) Reset() {
	*x = ListPaperDraftResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPaperDraftResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaperDraftResp) ProtoMessage() {}

func (x *ListPaperDraftResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaperDraftResp.ProtoReflect.Descriptor instead.
func (*ListPaperDraftResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{22}
}

func (x *ListPaperDraftResp) GetPaperDrafts() []*PaperDraft {
	if x != nil {
		return x.PaperDrafts
	}
	return nil
}

type CommentPaperDraftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CommentPaperDraftReq) Reset() {
	*x = CommentPaperDraftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentPaperDraftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentPaperDraftReq) ProtoMessage() {}

func (x *CommentPaperDraftReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentPaperDraftReq.ProtoReflect.Descriptor instead.
func (*CommentPaperDraftReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{23}
}

func (x *CommentPaperDraftReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommentPaperDraftReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CommentPaperDraftResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok int64 `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CommentPaperDraftResp) Reset() {
	*x = CommentPaperDraftResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentPaperDraftResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentPaperDraftResp) ProtoMessage() {}

func (x *CommentPaperDraftResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentPaperDraftResp.ProtoReflect.Descriptor instead.
func (*CommentPaperDraftResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{24}
}

func (x *CommentPaperDraftResp) GetOk() int64 {
	if x != nil {
		return x.Ok
	}
	return 0
}

type PaperFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstructId  string `protobuf:"bytes,2,opt,name=instructId,proto3" json:"instructId,omitempty"`
	Content     string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Comment     string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	CheckResult string `protobuf:"bytes,5,opt,name=checkResult,proto3" json:"checkResult,omitempty"`
	CreateAt    string `protobuf:"bytes,6,opt,name=createAt,proto3" json:"createAt,omitempty"`
}

func (x *PaperFinal) Reset() {
	*x = PaperFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperFinal) ProtoMessage() {}

func (x *PaperFinal) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperFinal.ProtoReflect.Descriptor instead.
func (*PaperFinal) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{25}
}

func (x *PaperFinal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaperFinal) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

func (x *PaperFinal) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PaperFinal) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PaperFinal) GetCheckResult() string {
	if x != nil {
		return x.CheckResult
	}
	return ""
}

func (x *PaperFinal) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type UploadPaperFinalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *UploadPaperFinalResp) Reset() {
	*x = UploadPaperFinalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPaperFinalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPaperFinalResp) ProtoMessage() {}

func (x *UploadPaperFinalResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPaperFinalResp.ProtoReflect.Descriptor instead.
func (*UploadPaperFinalResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{26}
}

func (x *UploadPaperFinalResp) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type ListPaperFinalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstructId string `protobuf:"bytes,1,opt,name=instructId,proto3" json:"instructId,omitempty"`
}

func (x *ListPaperFinalReq) Reset() {
	*x = ListPaperFinalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPaperFinalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaperFinalReq) ProtoMessage() {}

func (x *ListPaperFinalReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaperFinalReq.ProtoReflect.Descriptor instead.
func (*ListPaperFinalReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{27}
}

func (x *ListPaperFinalReq) GetInstructId() string {
	if x != nil {
		return x.InstructId
	}
	return ""
}

type ListPaperFinalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperFinals []*PaperFinal `protobuf:"bytes,1,rep,name=paperFinals,proto3" json:"paperFinals,omitempty"`
}

func (x *ListPaperFinalResp) Reset() {
	*x = ListPaperFinalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPaperFinalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaperFinalResp) ProtoMessage() {}

func (x *ListPaperFinalResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaperFinalResp.ProtoReflect.Descriptor instead.
func (*ListPaperFinalResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{28}
}

func (x *ListPaperFinalResp) GetPaperFinals() []*PaperFinal {
	if x != nil {
		return x.PaperFinals
	}
	return nil
}

type CommentPaperFinalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CommentPaperFinalReq) Reset() {
	*x = CommentPaperFinalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentPaperFinalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentPaperFinalReq) ProtoMessage() {}

func (x *CommentPaperFinalReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentPaperFinalReq.ProtoReflect.Descriptor instead.
func (*CommentPaperFinalReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{29}
}

func (x *CommentPaperFinalReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommentPaperFinalReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CommentPaperFinalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok int64 `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CommentPaperFinalResp) Reset() {
	*x = CommentPaperFinalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentPaperFinalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentPaperFinalResp) ProtoMessage() {}

func (x *CommentPaperFinalResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentPaperFinalResp.ProtoReflect.Descriptor instead.
func (*CommentPaperFinalResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{30}
}

func (x *CommentPaperFinalResp) GetOk() int64 {
	if x != nil {
		return x.Ok
	}
	return 0
}

type CheckPaperFinalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckResult string `protobuf:"bytes,2,opt,name=checkResult,proto3" json:"checkResult,omitempty"`
}

func (x *CheckPaperFinalReq) Reset() {
	*x = CheckPaperFinalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPaperFinalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPaperFinalReq) ProtoMessage() {}

func (x *CheckPaperFinalReq) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPaperFinalReq.ProtoReflect.Descriptor instead.
func (*CheckPaperFinalReq) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{31}
}

func (x *CheckPaperFinalReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckPaperFinalReq) GetCheckResult() string {
	if x != nil {
		return x.CheckResult
	}
	return ""
}

type CheckPaperFinalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok int64 `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CheckPaperFinalResp) Reset() {
	*x = CheckPaperFinalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_rpc_paper_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPaperFinalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPaperFinalResp) ProtoMessage() {}

func (x *CheckPaperFinalResp) ProtoReflect() protoreflect.Message {
	mi := &file_paper_rpc_paper_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPaperFinalResp.ProtoReflect.Descriptor instead.
func (*CheckPaperFinalResp) Descriptor() ([]byte, []int) {
	return file_paper_rpc_paper_proto_rawDescGZIP(), []int{32}
}

func (x *CheckPaperFinalResp) GetOk() int64 {
	if x != nil {
		return x.Ok
	}
	return 0
}

var File_paper_rpc_paper_proto protoreflect.FileDescriptor

var file_paper_rpc_paper_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x22, 0x8d,
	0x01, 0x0a, 0x0b, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x49,
	0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x15, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0c, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x0c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x73, 0x22, 0x41, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6f, 0x6b,
	0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x22, 0x35, 0x0a, 0x17, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x55, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x22, 0x43, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2a, 0x0a,
	0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x36, 0x0a, 0x18,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x59, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0x44, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2b,
	0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x8c, 0x01, 0x0a, 0x0a,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x32, 0x0a, 0x14, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x33,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x52, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x22, 0x40,
	0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x27, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x32, 0x0a, 0x14, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x33,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x52, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x22, 0x40,
	0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x27, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6f, 0x6b, 0x32, 0xe7, 0x09, 0x0a, 0x05, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0f, 0x6c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x19,
	0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x13, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1e, 0x2e,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d,
	0x0a, 0x14, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a,
	0x12, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5a, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x12, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12,
	0x1b, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x45, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x18, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x2e,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x19, 0x2e, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_paper_rpc_paper_proto_rawDescOnce sync.Once
	file_paper_rpc_paper_proto_rawDescData = file_paper_rpc_paper_proto_rawDesc
)

func file_paper_rpc_paper_proto_rawDescGZIP() []byte {
	file_paper_rpc_paper_proto_rawDescOnce.Do(func() {
		file_paper_rpc_paper_proto_rawDescData = protoimpl.X.CompressGZIP(file_paper_rpc_paper_proto_rawDescData)
	})
	return file_paper_rpc_paper_proto_rawDescData
}

var file_paper_rpc_paper_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_paper_rpc_paper_proto_goTypes = []interface{}{
	(*PaperFormal)(nil),               // 0: paper.PaperFormal
	(*UploadFileReq)(nil),             // 1: paper.UploadFileReq
	(*UploadPaperFormalResp)(nil),     // 2: paper.UploadPaperFormalResp
	(*ListPaperFormalReq)(nil),        // 3: paper.ListPaperFormalReq
	(*ListPaperFormalResp)(nil),       // 4: paper.ListPaperFormalResp
	(*CommentPaperFormalReq)(nil),     // 5: paper.CommentPaperFormalReq
	(*CommentPaperFormalResp)(nil),    // 6: paper.CommentPaperFormalResp
	(*ProposalDraft)(nil),             // 7: paper.ProposalDraft
	(*UploadProposalDraftResp)(nil),   // 8: paper.UploadProposalDraftResp
	(*ListProposalDraftReq)(nil),      // 9: paper.ListProposalDraftReq
	(*ListProposalDraftResp)(nil),     // 10: paper.ListProposalDraftResp
	(*CommentProposalDraftReq)(nil),   // 11: paper.CommentProposalDraftReq
	(*CommentProposalDraftResp)(nil),  // 12: paper.CommentProposalDraftResp
	(*ProposalFormal)(nil),            // 13: paper.ProposalFormal
	(*UploadProposalFormalResp)(nil),  // 14: paper.UploadProposalFormalResp
	(*ListProposalFormalReq)(nil),     // 15: paper.ListProposalFormalReq
	(*ListProposalFormalResp)(nil),    // 16: paper.ListProposalFormalResp
	(*CommentProposalFormalReq)(nil),  // 17: paper.CommentProposalFormalReq
	(*CommentProposalFormalResp)(nil), // 18: paper.CommentProposalFormalResp
	(*PaperDraft)(nil),                // 19: paper.PaperDraft
	(*UploadPaperDraftResp)(nil),      // 20: paper.UploadPaperDraftResp
	(*ListPaperDraftReq)(nil),         // 21: paper.ListPaperDraftReq
	(*ListPaperDraftResp)(nil),        // 22: paper.ListPaperDraftResp
	(*CommentPaperDraftReq)(nil),      // 23: paper.CommentPaperDraftReq
	(*CommentPaperDraftResp)(nil),     // 24: paper.CommentPaperDraftResp
	(*PaperFinal)(nil),                // 25: paper.PaperFinal
	(*UploadPaperFinalResp)(nil),      // 26: paper.UploadPaperFinalResp
	(*ListPaperFinalReq)(nil),         // 27: paper.ListPaperFinalReq
	(*ListPaperFinalResp)(nil),        // 28: paper.ListPaperFinalResp
	(*CommentPaperFinalReq)(nil),      // 29: paper.CommentPaperFinalReq
	(*CommentPaperFinalResp)(nil),     // 30: paper.CommentPaperFinalResp
	(*CheckPaperFinalReq)(nil),        // 31: paper.CheckPaperFinalReq
	(*CheckPaperFinalResp)(nil),       // 32: paper.CheckPaperFinalResp
}
var file_paper_rpc_paper_proto_depIdxs = []int32{
	0,  // 0: paper.ListPaperFormalResp.paperFormals:type_name -> paper.PaperFormal
	7,  // 1: paper.ListProposalDraftResp.proposalDrafts:type_name -> paper.ProposalDraft
	13, // 2: paper.ListProposalFormalResp.proposalFormals:type_name -> paper.ProposalFormal
	19, // 3: paper.ListPaperDraftResp.paperDrafts:type_name -> paper.PaperDraft
	25, // 4: paper.ListPaperFinalResp.paperFinals:type_name -> paper.PaperFinal
	1,  // 5: paper.Paper.uploadPaperFormal:input_type -> paper.UploadFileReq
	3,  // 6: paper.Paper.listPaperFormal:input_type -> paper.ListPaperFormalReq
	5,  // 7: paper.Paper.commentPaperFormal:input_type -> paper.CommentPaperFormalReq
	1,  // 8: paper.Paper.uploadProposalDraft:input_type -> paper.UploadFileReq
	9,  // 9: paper.Paper.listProposalDraft:input_type -> paper.ListProposalDraftReq
	11, // 10: paper.Paper.commentProposalDraft:input_type -> paper.CommentProposalDraftReq
	1,  // 11: paper.Paper.uploadProposalFormal:input_type -> paper.UploadFileReq
	15, // 12: paper.Paper.listProposalFormal:input_type -> paper.ListProposalFormalReq
	17, // 13: paper.Paper.commentProposalFormal:input_type -> paper.CommentProposalFormalReq
	1,  // 14: paper.Paper.uploadPaperDraft:input_type -> paper.UploadFileReq
	21, // 15: paper.Paper.listPaperDraft:input_type -> paper.ListPaperDraftReq
	23, // 16: paper.Paper.commentPaperDraft:input_type -> paper.CommentPaperDraftReq
	1,  // 17: paper.Paper.uploadPaperFinal:input_type -> paper.UploadFileReq
	27, // 18: paper.Paper.listPaperFinal:input_type -> paper.ListPaperFinalReq
	29, // 19: paper.Paper.commentPaperFinal:input_type -> paper.CommentPaperFinalReq
	31, // 20: paper.Paper.checkPaperFinal:input_type -> paper.CheckPaperFinalReq
	2,  // 21: paper.Paper.uploadPaperFormal:output_type -> paper.UploadPaperFormalResp
	4,  // 22: paper.Paper.listPaperFormal:output_type -> paper.ListPaperFormalResp
	6,  // 23: paper.Paper.commentPaperFormal:output_type -> paper.CommentPaperFormalResp
	8,  // 24: paper.Paper.uploadProposalDraft:output_type -> paper.UploadProposalDraftResp
	10, // 25: paper.Paper.listProposalDraft:output_type -> paper.ListProposalDraftResp
	12, // 26: paper.Paper.commentProposalDraft:output_type -> paper.CommentProposalDraftResp
	14, // 27: paper.Paper.uploadProposalFormal:output_type -> paper.UploadProposalFormalResp
	16, // 28: paper.Paper.listProposalFormal:output_type -> paper.ListProposalFormalResp
	18, // 29: paper.Paper.commentProposalFormal:output_type -> paper.CommentProposalFormalResp
	20, // 30: paper.Paper.uploadPaperDraft:output_type -> paper.UploadPaperDraftResp
	22, // 31: paper.Paper.listPaperDraft:output_type -> paper.ListPaperDraftResp
	24, // 32: paper.Paper.commentPaperDraft:output_type -> paper.CommentPaperDraftResp
	26, // 33: paper.Paper.uploadPaperFinal:output_type -> paper.UploadPaperFinalResp
	28, // 34: paper.Paper.listPaperFinal:output_type -> paper.ListPaperFinalResp
	30, // 35: paper.Paper.commentPaperFinal:output_type -> paper.CommentPaperFinalResp
	32, // 36: paper.Paper.checkPaperFinal:output_type -> paper.CheckPaperFinalResp
	21, // [21:37] is the sub-list for method output_type
	5,  // [5:21] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_paper_rpc_paper_proto_init() }
func file_paper_rpc_paper_proto_init() {
	if File_paper_rpc_paper_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_paper_rpc_paper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperFormal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPaperFormalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPaperFormalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPaperFormalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentPaperFormalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentPaperFormalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalDraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadProposalDraftResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProposalDraftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProposalDraftResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentProposalDraftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentProposalDraftResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalFormal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadProposalFormalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProposalFormalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProposalFormalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentProposalFormalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentProposalFormalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperDraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPaperDraftResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPaperDraftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPaperDraftResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentPaperDraftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentPaperDraftResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPaperFinalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPaperFinalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPaperFinalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentPaperFinalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentPaperFinalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPaperFinalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_rpc_paper_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPaperFinalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_paper_rpc_paper_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_paper_rpc_paper_proto_goTypes,
		DependencyIndexes: file_paper_rpc_paper_proto_depIdxs,
		MessageInfos:      file_paper_rpc_paper_proto_msgTypes,
	}.Build()
	File_paper_rpc_paper_proto = out.File
	file_paper_rpc_paper_proto_rawDesc = nil
	file_paper_rpc_paper_proto_goTypes = nil
	file_paper_rpc_paper_proto_depIdxs = nil
}
