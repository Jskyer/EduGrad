// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"edu-grad/paper/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/paperdraft/comment",
				Handler: commentPaperDraftHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/paperdraft/download",
				Handler: downloadPaperDraftHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/paperdraft/list",
				Handler: listPaperDraftHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/paperdraft/upload",
				Handler: uploadPaperDraftHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/paperfinal/check",
				Handler: checkPaperFinalHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/paperfinal/comment",
				Handler: commentPaperFinalHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/paperfinal/download",
				Handler: downloadPaperFinalHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/paperfinal/list",
				Handler: listPaperFinalHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/paperfinal/upload",
				Handler: uploadPaperFinalHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/paperformal/comment",
				Handler: commentPaperFormalHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/paperformal/download",
				Handler: downloadPaperFormalHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/paperformal/list",
				Handler: listPaperFormalHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/paperformal/upload",
				Handler: uploadPaperFormalHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/proposaldraft/comment",
				Handler: commentProposalDraftHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/proposaldraft/download",
				Handler: downloadProposalDraftHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/proposaldraft/list",
				Handler: listProposalDraftHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/proposaldraft/upload",
				Handler: uploadProposalDraftHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/proposalformal/comment",
				Handler: commentProposalFormalHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/proposalformal/download",
				Handler: downloadProposalFormalHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/proposalformal/list",
				Handler: listProposalFormalHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/proposalformal/upload",
				Handler: uploadProposalFormalHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/paper"),
	)
}
